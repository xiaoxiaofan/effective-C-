C++书写准则（每天五条）

explicit用来阻止隐形类型转换；

条款1：c++是一个联盟组织
包括四个层次：c,c++面向对象（也就是封装，继承，多态等），模板编程（template c++）,STL.

条款2：尽量用const,enum,inline替代#define
#define存在的问题，不会进行类型安全检查，同时还可能出现无法预测的结果。常量用const,enum;函数用inline.

条款3：尽量用const
const修饰常量，不能修改；const修饰指针，指针不能改变(T* const p)；const修改指针指向的值(const T*p)，其地址指向值不改变。
const修饰函数，表示成员函数只有在不更改对象成员变量的值。但是，如果一定要在成员函数中访问的话，用mutable来修饰。静态函数调用非静态函数时，通过
const_cast<T>(static_cast<T> *);
修饰函数返回值，表示不能做左值。  CONST修饰对象，函数参数，函数返回值，成员函数本体。

条款4：确定对象被使用前初始化
c++规定，对象成员变量的初始化动作发生在进入构造函数本体之前。C++有着固定的成员初始化顺序，base class更早于derived class被初始化，而class的成员
变量总是以声明次序被初始化。
手工初始化非成员变量，使用成员列表初始化对象的所有成分，加强设计

条款5：了解c++默认编写的函数包括，构造函数，析构函数，copy 赋值操作，copy构造函数。






